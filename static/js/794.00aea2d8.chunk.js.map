{"version":3,"file":"static/js/794.00aea2d8.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/button/dist/chakra-ui-button.esm.js","../node_modules/extend/index.js","../node_modules/inline-style-parser/index.js","../node_modules/is-buffer/index.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/react-markdown/node_modules/react-is/index.js","../node_modules/style-to-object/index.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/unist-util-stringify-position/lib/index.js","../node_modules/vfile-message/lib/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/bail/index.js","../node_modules/unified/node_modules/is-plain-obj/index.js","../node_modules/trough/lib/index.js","../node_modules/unified/lib/index.js","../node_modules/mdast-util-to-string/lib/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/parse.js","../node_modules/micromark/lib/preprocess.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/remark-parse/lib/index.js","../node_modules/micromark-util-sanitize-uri/index.js","../node_modules/unist-util-is/lib/index.js","../node_modules/unist-util-visit-parents/lib/index.js","../node_modules/unist-util-visit/lib/index.js","../node_modules/unist-util-position/lib/index.js","../node_modules/mdast-util-definitions/lib/index.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/trim-lines/index.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","../node_modules/mdast-util-to-hast/lib/handlers/table-row.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/state.js","../node_modules/unist-util-generated/lib/index.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/remark-rehype/lib/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/react-markdown/lib/rehype-filter.js","../node_modules/hast-util-whitespace/index.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/style-to-object/index.mjs","../node_modules/react-markdown/lib/uri-transformer.js","../node_modules/react-markdown/lib/ast-to-react.js","../node_modules/comma-separated-tokens/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/react-markdown/lib/react-markdown.js"],"sourcesContent":["import { useMergeRefs } from '@chakra-ui/hooks';\nimport { forwardRef, chakra, useStyleConfig, omitThemingProps } from '@chakra-ui/system';\nimport { cx, __DEV__, mergeWith, dataAttr } from '@chakra-ui/utils';\nimport * as React from 'react';\nimport { createContext } from '@chakra-ui/react-utils';\nimport { Spinner } from '@chakra-ui/spinner';\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar _excluded$4 = [\"size\", \"colorScheme\", \"variant\", \"className\", \"spacing\", \"isAttached\", \"isDisabled\"];\n\nvar _createContext = createContext({\n  strict: false,\n  name: \"ButtonGroupContext\"\n}),\n    ButtonGroupProvider = _createContext[0],\n    useButtonGroup = _createContext[1];\nvar ButtonGroup = /*#__PURE__*/forwardRef(function (props, ref) {\n  var size = props.size,\n      colorScheme = props.colorScheme,\n      variant = props.variant,\n      className = props.className,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? \"0.5rem\" : _props$spacing,\n      isAttached = props.isAttached,\n      isDisabled = props.isDisabled,\n      rest = _objectWithoutPropertiesLoose(props, _excluded$4);\n\n  var _className = cx(\"chakra-button__group\", className);\n\n  var context = React.useMemo(function () {\n    return {\n      size: size,\n      colorScheme: colorScheme,\n      variant: variant,\n      isDisabled: isDisabled\n    };\n  }, [size, colorScheme, variant, isDisabled]);\n  var groupStyles = {\n    display: \"inline-flex\"\n  };\n\n  if (isAttached) {\n    groupStyles = _extends({}, groupStyles, {\n      \"> *:first-of-type:not(:last-of-type)\": {\n        borderEndRadius: 0\n      },\n      \"> *:not(:first-of-type):not(:last-of-type)\": {\n        borderRadius: 0\n      },\n      \"> *:not(:first-of-type):last-of-type\": {\n        borderStartRadius: 0\n      }\n    });\n  } else {\n    groupStyles = _extends({}, groupStyles, {\n      \"& > *:not(style) ~ *:not(style)\": {\n        marginStart: spacing\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(ButtonGroupProvider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    role: \"group\",\n    __css: groupStyles,\n    className: _className\n  }, rest)));\n});\n\nif (__DEV__) {\n  ButtonGroup.displayName = \"ButtonGroup\";\n}\n\nvar _excluded$3 = [\"label\", \"placement\", \"spacing\", \"children\", \"className\", \"__css\"];\nvar ButtonSpinner = function ButtonSpinner(props) {\n  var label = props.label,\n      placement = props.placement,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? \"0.5rem\" : _props$spacing,\n      _props$children = props.children,\n      children = _props$children === void 0 ? /*#__PURE__*/React.createElement(Spinner, {\n    color: \"currentColor\",\n    width: \"1em\",\n    height: \"1em\"\n  }) : _props$children,\n      className = props.className,\n      __css = props.__css,\n      rest = _objectWithoutPropertiesLoose(props, _excluded$3);\n\n  var _className = cx(\"chakra-button__spinner\", className);\n\n  var marginProp = placement === \"start\" ? \"marginEnd\" : \"marginStart\";\n  var spinnerStyles = React.useMemo(function () {\n    var _extends2;\n\n    return _extends((_extends2 = {\n      display: \"flex\",\n      alignItems: \"center\",\n      position: label ? \"relative\" : \"absolute\"\n    }, _extends2[marginProp] = label ? spacing : 0, _extends2.fontSize = \"1em\", _extends2.lineHeight = \"normal\", _extends2), __css);\n  }, [__css, label, marginProp, spacing]);\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    className: _className\n  }, rest, {\n    __css: spinnerStyles\n  }), children);\n};\n\nif (__DEV__) {\n  ButtonSpinner.displayName = \"ButtonSpinner\";\n}\n\nvar _excluded$2 = [\"children\", \"className\"];\nvar ButtonIcon = function ButtonIcon(props) {\n  var children = props.children,\n      className = props.className,\n      rest = _objectWithoutPropertiesLoose(props, _excluded$2);\n\n  var _children = /*#__PURE__*/React.isValidElement(children) ? /*#__PURE__*/React.cloneElement(children, {\n    \"aria-hidden\": true,\n    focusable: false\n  }) : children;\n\n  var _className = cx(\"chakra-button__icon\", className);\n\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({\n    display: \"inline-flex\",\n    alignSelf: \"center\",\n    flexShrink: 0\n  }, rest, {\n    className: _className\n  }), _children);\n};\n\nif (__DEV__) {\n  ButtonIcon.displayName = \"ButtonIcon\";\n}\n\nfunction useButtonType(value) {\n  var _React$useState = React.useState(!value),\n      isButton = _React$useState[0],\n      setIsButton = _React$useState[1];\n\n  var refCallback = React.useCallback(function (node) {\n    if (!node) return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  var type = isButton ? \"button\" : undefined;\n  return {\n    ref: refCallback,\n    type: type\n  };\n}\n\nvar _excluded$1 = [\"isDisabled\", \"isLoading\", \"isActive\", \"isFullWidth\", \"children\", \"leftIcon\", \"rightIcon\", \"loadingText\", \"iconSpacing\", \"type\", \"spinner\", \"spinnerPlacement\", \"className\", \"as\"];\nvar Button = /*#__PURE__*/forwardRef(function (props, ref) {\n  var group = useButtonGroup();\n  var styles = useStyleConfig(\"Button\", _extends({}, group, props));\n\n  var _omitThemingProps = omitThemingProps(props),\n      _omitThemingProps$isD = _omitThemingProps.isDisabled,\n      isDisabled = _omitThemingProps$isD === void 0 ? group == null ? void 0 : group.isDisabled : _omitThemingProps$isD,\n      isLoading = _omitThemingProps.isLoading,\n      isActive = _omitThemingProps.isActive,\n      isFullWidth = _omitThemingProps.isFullWidth,\n      children = _omitThemingProps.children,\n      leftIcon = _omitThemingProps.leftIcon,\n      rightIcon = _omitThemingProps.rightIcon,\n      loadingText = _omitThemingProps.loadingText,\n      _omitThemingProps$ico = _omitThemingProps.iconSpacing,\n      iconSpacing = _omitThemingProps$ico === void 0 ? \"0.5rem\" : _omitThemingProps$ico,\n      type = _omitThemingProps.type,\n      spinner = _omitThemingProps.spinner,\n      _omitThemingProps$spi = _omitThemingProps.spinnerPlacement,\n      spinnerPlacement = _omitThemingProps$spi === void 0 ? \"start\" : _omitThemingProps$spi,\n      className = _omitThemingProps.className,\n      as = _omitThemingProps.as,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded$1);\n  /**\n   * When button is used within ButtonGroup (i.e. flushed with sibling buttons),\n   * it is important to add a `zIndex` on focus.\n   *\n   * So let's read the component styles and then add `zIndex` to it.\n   */\n\n\n  var buttonStyles = React.useMemo(function () {\n    var _styles$_focus;\n\n    var _focus = mergeWith({}, (_styles$_focus = styles == null ? void 0 : styles[\"_focus\"]) != null ? _styles$_focus : {}, {\n      zIndex: 1\n    });\n\n    return _extends({\n      display: \"inline-flex\",\n      appearance: \"none\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      userSelect: \"none\",\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      verticalAlign: \"middle\",\n      outline: \"none\",\n      width: isFullWidth ? \"100%\" : \"auto\"\n    }, styles, !!group && {\n      _focus: _focus\n    });\n  }, [styles, group, isFullWidth]);\n\n  var _useButtonType = useButtonType(as),\n      _ref = _useButtonType.ref,\n      defaultType = _useButtonType.type;\n\n  var contentProps = {\n    rightIcon: rightIcon,\n    leftIcon: leftIcon,\n    iconSpacing: iconSpacing,\n    children: children\n  };\n  return /*#__PURE__*/React.createElement(chakra.button, _extends({\n    disabled: isDisabled || isLoading,\n    ref: useMergeRefs(ref, _ref),\n    as: as,\n    type: type != null ? type : defaultType,\n    \"data-active\": dataAttr(isActive),\n    \"data-loading\": dataAttr(isLoading),\n    __css: buttonStyles,\n    className: cx(\"chakra-button\", className)\n  }, rest), isLoading && spinnerPlacement === \"start\" && /*#__PURE__*/React.createElement(ButtonSpinner, {\n    className: \"chakra-button__spinner--start\",\n    label: loadingText,\n    placement: \"start\",\n    spacing: iconSpacing\n  }, spinner), isLoading ? loadingText || /*#__PURE__*/React.createElement(chakra.span, {\n    opacity: 0\n  }, /*#__PURE__*/React.createElement(ButtonContent, contentProps)) : /*#__PURE__*/React.createElement(ButtonContent, contentProps), isLoading && spinnerPlacement === \"end\" && /*#__PURE__*/React.createElement(ButtonSpinner, {\n    className: \"chakra-button__spinner--end\",\n    label: loadingText,\n    placement: \"end\",\n    spacing: iconSpacing\n  }, spinner));\n});\n\nif (__DEV__) {\n  Button.displayName = \"Button\";\n}\n\nfunction ButtonContent(props) {\n  var leftIcon = props.leftIcon,\n      rightIcon = props.rightIcon,\n      children = props.children,\n      iconSpacing = props.iconSpacing;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, leftIcon && /*#__PURE__*/React.createElement(ButtonIcon, {\n    marginEnd: iconSpacing\n  }, leftIcon), children, rightIcon && /*#__PURE__*/React.createElement(ButtonIcon, {\n    marginStart: iconSpacing\n  }, rightIcon));\n}\n\nvar _excluded = [\"icon\", \"children\", \"isRound\", \"aria-label\"];\nvar IconButton = /*#__PURE__*/forwardRef(function (props, ref) {\n  var icon = props.icon,\n      children = props.children,\n      isRound = props.isRound,\n      ariaLabel = props[\"aria-label\"],\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n  /**\n   * Passing the icon as prop or children should work\n   */\n\n\n  var element = icon || children;\n\n  var _children = /*#__PURE__*/React.isValidElement(element) ? /*#__PURE__*/React.cloneElement(element, {\n    \"aria-hidden\": true,\n    focusable: false\n  }) : null;\n\n  return /*#__PURE__*/React.createElement(Button, _extends({\n    padding: \"0\",\n    borderRadius: isRound ? \"full\" : undefined,\n    ref: ref,\n    \"aria-label\": ariaLabel\n  }, rest), _children);\n});\n\nif (__DEV__) {\n  IconButton.displayName = \"IconButton\";\n}\n\nexport { Button, ButtonGroup, ButtonSpinner, IconButton, useButtonGroup };\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\nmodule.exports.default = StyleToObject; // ESM support\n","function _iterableToArray(r) {\n  if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r);\n}\nexport { _iterableToArray as default };","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var s = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\nexport { _objectWithoutProperties as default };","function _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (e.includes(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nexport { _objectWithoutPropertiesLoose as default };","function _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nexport { _setPrototypeOf as default };","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nfunction _toConsumableArray(r) {\n  return arrayWithoutHoles(r) || iterableToArray(r) || unsupportedIterableToArray(r) || nonIterableSpread();\n}\nexport { _toConsumableArray as default };","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nfunction _arrayWithoutHoles(r) {\n  if (Array.isArray(r)) return arrayLikeToArray(r);\n}\nexport { _arrayWithoutHoles as default };","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _nonIterableSpread as default };","function _classCallCheck(a, n) {\n  if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _classCallCheck as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(e, r) {\n  for (var t = 0; t < r.length; t++) {\n    var o = r[t];\n    o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, toPropertyKey(o.key), o);\n  }\n}\nfunction _createClass(e, r, t) {\n  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), e;\n}\nexport { _createClass as default };","import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inherits(t, e) {\n  if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\");\n  t.prototype = Object.create(e && e.prototype, {\n    constructor: {\n      value: t,\n      writable: !0,\n      configurable: !0\n    }\n  }), Object.defineProperty(t, \"prototype\", {\n    writable: !1\n  }), e && setPrototypeOf(t, e);\n}\nexport { _inherits as default };","function _getPrototypeOf(t) {\n  return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) {\n    return t.__proto__ || Object.getPrototypeOf(t);\n  }, _getPrototypeOf(t);\n}\nexport { _getPrototypeOf as default };","function _isNativeReflectConstruct() {\n  try {\n    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n  } catch (t) {}\n  return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {\n    return !!t;\n  })();\n}\nexport { _isNativeReflectConstruct as default };","function _assertThisInitialized(e) {\n  if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  return e;\n}\nexport { _assertThisInitialized as default };","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nfunction _possibleConstructorReturn(t, e) {\n  if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e;\n  if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\");\n  return assertThisInitialized(t);\n}\nexport { _possibleConstructorReturn as default };","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nfunction _createSuper(t) {\n  var r = isNativeReflectConstruct();\n  return function () {\n    var e,\n      o = getPrototypeOf(t);\n    if (r) {\n      var s = getPrototypeOf(this).constructor;\n      e = Reflect.construct(o, arguments, s);\n    } else e = o.apply(this, arguments);\n    return possibleConstructorReturn(this, e);\n  };\n}\nexport { _createSuper as default };","import isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _construct(t, e, r) {\n  if (isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments);\n  var o = [null];\n  o.push.apply(o, e);\n  var p = new (t.bind.apply(t, o))();\n  return r && setPrototypeOf(p, r.prototype), p;\n}\nexport { _construct as default };","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nfunction _wrapNativeSuper(t) {\n  var r = \"function\" == typeof Map ? new Map() : void 0;\n  return _wrapNativeSuper = function _wrapNativeSuper(t) {\n    if (null === t || !isNativeFunction(t)) return t;\n    if (\"function\" != typeof t) throw new TypeError(\"Super expression must either be null or a function\");\n    if (void 0 !== r) {\n      if (r.has(t)) return r.get(t);\n      r.set(t, Wrapper);\n    }\n    function Wrapper() {\n      return construct(t, arguments, getPrototypeOf(this).constructor);\n    }\n    return Wrapper.prototype = Object.create(t.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: !1,\n        writable: !0,\n        configurable: !0\n      }\n    }), setPrototypeOf(Wrapper, t);\n  }, _wrapNativeSuper(t);\n}\nexport { _wrapNativeSuper as default };","function _isNativeFunction(t) {\n  try {\n    return -1 !== Function.toString.call(t).indexOf(\"[native code]\");\n  } catch (n) {\n    return \"function\" == typeof t;\n  }\n}\nexport { _isNativeFunction as default };","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   *\n   *   > 👉 **Note**: you should use markdown.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // To do: next major: expose `undefined` everywhere instead of `null`.\n  constructor(reason, place, origin) {\n    /** @type {[string | null, string | null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // To do: next major: deep clone.\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        // To do: next major: deep clone.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // To do: next major: deep clone.\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`.\n    /**\n     * Serialized positional info of error.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(place) || '1:1'\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = typeof reason === 'object' ? reason.message : reason\n\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * > 👉 **Note**: you should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * State of problem.\n     *\n     * * `true` — marks associated file as no longer processable (error)\n     * * `false` — necessitates a (potential) change (warning)\n     * * `null | undefined` — for things that might not need changing (info)\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | null}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number | null}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full unist position.\n     *\n     * @type {Position | null}\n     */\n    this.position = position\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | null}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | null}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | null}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | null}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | null}\n     */\n    this.expected\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | null}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | null}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * Check if `fileUrlOrPath` looks like a URL.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileUrlOrPath) {\n  return (\n    fileUrlOrPath !== null &&\n    typeof fileUrlOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string | URL} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {Record<string, unknown> & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {'ascii' | 'utf8' | 'utf-8' | 'utf16le' | 'ucs2' | 'ucs-2' | 'base64' | 'base64url' | 'latin1' | 'binary' | 'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *\n *   This is a copy of the types from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Options | URL | Value | VFile} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {Value | null | undefined} [value]\n *   Set `value`.\n * @property {string | null | undefined} [cwd]\n *   Set `cwd`.\n * @property {Array<string> | null | undefined} [history]\n *   Set `history`.\n * @property {URL | string | null | undefined} [path]\n *   Set `path`.\n * @property {string | null | undefined} [basename]\n *   Set `basename`.\n * @property {string | null | undefined} [stem]\n *   Set `stem`.\n * @property {string | null | undefined} [extname]\n *   Set `extname`.\n * @property {string | null | undefined} [dirname]\n *   Set `dirname`.\n * @property {Data | null | undefined} [data]\n *   Set `data`.\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template {ReporterSettings} Settings\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport bufferLike from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n *\n * @type {Array<'basename' | 'dirname' | 'extname' | 'history' | 'path' | 'stem'>}\n */\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Buffer` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {string | URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Buffer`\n   *   (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding || undefined)\n  }\n\n  /**\n   * Create a warning message associated with the file.\n   *\n   * Its `fatal` is set to `false` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Create an info message associated with the file.\n   *\n   * Its `fatal` is set to `null` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Create a fatal error associated with the file.\n   *\n   * Its `fatal` is set to `true` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Message.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {void}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is a buffer.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Buffer}\n *   Whether `value` is a Node.js buffer.\n */\nfunction buffer(value) {\n  return bufferLike(value)\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nfunction _toArray(r) {\n  return arrayWithHoles(r) || iterableToArray(r) || unsupportedIterableToArray(r) || nonIterableRest();\n}\nexport { _toArray as default };","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","// To do: remove `void`s\n// To do: remove `null` from output of our APIs, allow it as user APIs.\n\n/**\n * @typedef {(error?: Error | null | undefined, ...output: Array<any>) => void} Callback\n *   Callback.\n *\n * @typedef {(...input: Array<any>) => any} Middleware\n *   Ware.\n *\n * @typedef Pipeline\n *   Pipeline.\n * @property {Run} run\n *   Run the pipeline.\n * @property {Use} use\n *   Add middleware.\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n *\n *   Calls `done` on completion with either an error or the output of the\n *   last middleware.\n *\n *   > 👉 **Note**: as the length of input defines whether async functions get a\n *   > `next` function,\n *   > it’s recommended to keep `input` at one value normally.\n\n *\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n *   Pipeline.\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error | null | undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware` into a uniform interface.\n *\n * You can pass all input to the resulting function.\n * `callback` is then called with the output of `middleware`.\n *\n * If `middleware` accepts more arguments than the later given in input,\n * an extra `done` function is passed to it after that input,\n * which must be called by `middleware`.\n *\n * The first value in `input` is the main input value.\n * All other input values are the rest input values.\n * The values given to `callback` are the input values,\n * merged with every non-nullish output value.\n *\n * * if `middleware` throws an error,\n *   returns a promise that is rejected,\n *   or calls the given `done` function with an error,\n *   `callback` is called with that error\n * * if `middleware` returns a value or returns a promise that is resolved,\n *   that value is the main output value\n * * if `middleware` calls `done`,\n *   all non-nullish values except for the first one (the error) overwrite the\n *   output values\n *\n * @param {Middleware} middleware\n *   Function to wrap.\n * @param {Callback} callback\n *   Callback called with the output of `middleware`.\n * @returns {Run}\n *   Wrapped middleware.\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result && result.then && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   *\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s.\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML.\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} value\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Node}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {void}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Handles} Handles\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {Array<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n * @param {Array<unknown>} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {Array<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   A single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\n\n/**\n * Regular expression that matches a unicode punctuation character.\n */\nexport const unicodePunctuationRegex =\n  /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n  let previous\n  return contentStart\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n    if (previous) {\n      previous.next = token\n    }\n    previous = token\n    return data(code)\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    }\n\n    // Data.\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n}\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext | undefined} */\n  let childFlow\n  /** @type {Token | undefined} */\n  let childToken\n  /** @type {number} */\n  let lineStartOffset\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    }\n\n    // Done.\n    return checkNewContainers(code)\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n      if (childFlow) {\n        closeFlow()\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      let index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n    return start(code)\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    }\n\n    // Check if there is a new container.\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState])\n    // Try another.\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow'))\n      // Get ready for the next line.\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n    effects.consume(code)\n    return flowContinue\n  }\n\n  /**\n   * @param {Token} token\n   * @param {boolean | undefined} [eof]\n   * @returns {void}\n   */\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream)\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset &&\n          // …and either is not ended yet…\n          (!childFlow.events[index][1].end ||\n            // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean | undefined} */\n      let seen\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n          seen = true\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n    }\n  }\n\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n  function exitContainers(size) {\n    let index = stack.length\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n    stack.length = size\n  }\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'linePrefix')(code)\n      : after(code)\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n */\n\nimport {splice} from 'micromark-util-chunked'\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} events\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n  let event\n  /** @type {number | undefined} */\n  let lineIndex\n  /** @type {number} */\n  let otherIndex\n  /** @type {Event} */\n  let otherEvent\n  /** @type {Array<Event>} */\n  let parameters\n  /** @type {Array<Event>} */\n  let subevents\n  /** @type {boolean | undefined} */\n  let more\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n    event = events[index]\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start)\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n  return !more\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {Array<Event>} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {Array<number>} */\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {Array<[number, number]>} */\n  const jumps = []\n  /** @type {Record<string, number>} */\n  const gaps = {}\n  /** @type {Array<Chunk>} */\n  let stream\n  /** @type {Token | undefined} */\n  let previous\n  let index = -1\n  /** @type {Token | undefined} */\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start]\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition)\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n      if (!current.next) {\n        stream.push(null)\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n      tokenizer.write(stream)\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    }\n\n    // Unravel the next token.\n    previous = current\n    current = current.next\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start)\n      // Help GC.\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = []\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n  index = -1\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous\n  return chunkStart\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return chunkInside(code)\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    }\n\n    // Data.\n    effects.consume(code)\n    return chunkInside\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return chunkInside\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1]\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding,\n    // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n\n/**\n * @param {'string' | 'text'} field\n * @returns {InitialConstruct}\n */\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      }\n\n      // Data.\n      effects.consume(code)\n      return data\n    }\n\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n      const list = constructs[code]\n      let index = -1\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index]\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n      return false\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n * @returns {Resolver}\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number | undefined} */\n    let enter\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n        enter = undefined\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean | undefined} */\n      let tabs\n      while (index--) {\n        const chunk = chunks[index]\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n          if (bufferIndex) break\n          bufferIndex = -1\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n      eventIndex++\n    }\n  }\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {Array<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenType} TokenType\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * @callback Restore\n * @returns {void}\n *\n * @typedef Info\n * @property {Restore} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n  let chunks = []\n  /** @type {Array<Token>} */\n  let stack = []\n  /** @type {boolean | undefined} */\n  let consumed = true\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n\n  /**\n   * The state function.\n   *\n   * @type {State | void}\n   */\n  let state = initialize.tokenize.call(context, effects)\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n  return context\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main()\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n    addResult(initialize, 0)\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {line, column, offset, _index, _bufferIndex} = point\n    return {\n      line,\n      column,\n      offset,\n      _index,\n      _bufferIndex\n    }\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index]\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++\n\n      // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code\n\n    // Mark as consumed.\n    consumed = true\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   */\n  function constructFactory(onreturn, fields) {\n    return hook\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | Construct | ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State | undefined} [bogusState]\n     * @returns {State}\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n      let constructIndex\n      /** @type {Construct} */\n      let currentConstruct\n      /** @type {Info} */\n      let info\n      return Array.isArray(constructs) /* c8 ignore next 1 */\n        ? handleListOfConstructs(constructs)\n        : 'tokenize' in constructs\n        ? // @ts-expect-error Looks like a construct.\n          handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n      function handleMapOfConstructs(map) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        if (list.length === 0) {\n          return bogusState\n        }\n        return handleConstruct(list[constructIndex])\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n      function handleConstruct(construct) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          // Always populated by defaults.\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true\n        info.restore()\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n        return bogusState\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'end' | 'start'>} token\n * @returns {Array<Chunk>}\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n  let view\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n    if (startBufferIndex > -1) {\n      const head = view[0]\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex)\n      } else {\n        view.shift()\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n  return view\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean | undefined} [expandTabs=false]\n * @returns {string}\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {boolean | undefined} */\n  let atTab\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n    let value\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n        case -4: {\n          value = '\\n'\n          break\n        }\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n    atTab = chunk === -2\n    result.push(value)\n  }\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('thematicBreak')\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code\n    return atBreak(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit('thematicBreak')\n      return ok(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n    effects.exit('thematicBreakSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, atBreak, 'whitespace')(code)\n      : atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/** @type {Construct} */\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n\n/** @type {Construct} */\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine,\n      // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined\n    // Always populated by defaults.\n\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n\n/**\n * @type {Exiter}\n * @this {TokenizeContext}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this\n  return contStart\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(\n        effects,\n        contBefore,\n        'linePrefix',\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : 4\n      )(code)\n    }\n    return contBefore(code)\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code)\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return enclosedBefore\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return raw(code)\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return enclosed(code)\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return enclosedBefore(code)\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? enclosedEscape : enclosed\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return enclosed\n    }\n    return enclosed(code)\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (\n      !balance &&\n      (code === null || code === 41 || markdownLineEndingOrSpace(code))\n    ) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code)\n      balance++\n      return raw\n    }\n    if (code === 41) {\n      effects.consume(code)\n      balance--\n      return raw\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? rawEscape : raw\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return raw\n    }\n    return raw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (\n      size > 999 ||\n      code === null ||\n      code === 91 ||\n      (code === 93 && !seen) ||\n      // To do: remove in the future once we’ve switched from\n      // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n      // which doesn’t need this.\n      // Hidden footnotes hook.\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return labelInside(code)\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    if (!seen) seen = !markdownSpace(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      marker = code === 40 ? 41 : code\n      return begin\n    }\n    return nok(code)\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    return atBreak(code)\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return begin(marker)\n    }\n    if (code === null) {\n      return nok(code)\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atBreak, 'linePrefix')\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return inside(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? escape : inside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return inside\n    }\n    return inside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ')\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n\n/** @type {Construct} */\nconst titleBefore = {\n  tokenize: tokenizeTitleBefore,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n  let identifier\n  return start\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter('definition')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n      return markerAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, destinationBefore)(code)\n      : destinationBefore(code)\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionDestination',\n      'definitionDestinationLiteral',\n      'definitionDestinationLiteralMarker',\n      'definitionDestinationRaw',\n      'definitionDestinationString'\n    )(code)\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code)\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, afterWhitespace, 'whitespace')(code)\n      : afterWhitespace(code)\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier)\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, beforeMarker)(code)\n      : nok(code)\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(\n      effects,\n      titleAfter,\n      nok,\n      'definitionTitle',\n      'definitionTitleMarker',\n      'definitionTitleString'\n    )(code)\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, titleAfterOptionalWhitespace, 'whitespace')(code)\n      : titleAfterOptionalWhitespace(code)\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n\n/** @type {Construct} */\nconst furtherStart = {\n  tokenize: tokenizeFurtherStart,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter('codeIndented')\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? atBreak(code)\n      : nok(code)\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code)\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return inside(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return inside\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit('codeIndented')\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this\n  return furtherStart\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return furtherStart\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? furtherStart(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n  let content\n  /** @type {Token} */\n  let text\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter('atxHeading')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('atxHeadingSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return sequenceOpen\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return atBreak(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequenceFurther(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code)\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequenceFurther\n    }\n    effects.exit('atxHeadingSequence')\n    return atBreak(code)\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length\n  /** @type {number | undefined} */\n  let content\n  /** @type {number | undefined} */\n  let text\n  /** @type {number | undefined} */\n  let definition\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = 'setextHeadingText'\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context])\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length\n    /** @type {boolean | undefined} */\n    let paragraph\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (\n        self.events[index][1].type !== 'lineEnding' &&\n        self.events[index][1].type !== 'linePrefix' &&\n        self.events[index][1].type !== 'content'\n      ) {\n        paragraph = self.events[index][1].type === 'paragraph'\n        break\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      marker = code\n      return before(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('setextHeadingLineSequence')\n    return inside(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    effects.exit('setextHeadingLineSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'lineSuffix')(code)\n      : after(code)\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  tokenize: tokenizeBlankLineBefore,\n  partial: true\n}\nconst nonLazyContinuationStart = {\n  tokenize: tokenizeNonLazyContinuationStart,\n  partial: true\n}\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start\n    // Remove the line prefix.\n    events.splice(index - 2, 2)\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n  let marker\n  /** @type {boolean} */\n  let closingTag\n  /** @type {string} */\n  let buffer\n  /** @type {number} */\n  let index\n  /** @type {Code} */\n  let markerB\n  return start\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      closingTag = true\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      marker = 3\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      marker = 2\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      marker = 5\n      index = 0\n      return cdataOpenInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      marker = 4\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation\n      }\n      return cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      const slash = code === 47\n      const name = buffer.toLowerCase()\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6\n        if (slash) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      marker = 7\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : closingTag\n        ? completeClosingTagAfter(code)\n        : completeAttributeNameBefore(code)\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    return completeAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n    return completeAttributeNameBefore(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      markerB = code\n      return completeAttributeValueQuoted\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    return completeAttributeValueUnquoted(code)\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code)\n      markerB = null\n      return completeAttributeValueQuotedAfter\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 47 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code)\n      return continuationCdataInside\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit('htmlFlowData')\n      return effects.check(\n        blankLineBefore,\n        continuationAfter,\n        continuationStart\n      )(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationStart(code)\n    }\n    effects.consume(code)\n    return continuation\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(\n      nonLazyContinuationStart,\n      continuationStartNonLazy,\n      continuationAfter\n    )(code)\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return continuationBefore\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code)\n    }\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase()\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code)\n        return continuationClose\n      }\n      return continuation(code)\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationAfter(code)\n    }\n    effects.consume(code)\n    return continuationClose\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit('htmlFlow')\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  tokenize: tokenizeNonLazyContinuation,\n  partial: true\n}\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n  const closeStart = {\n    tokenize: tokenizeCloseStart,\n    partial: true\n  }\n  let initialPrefix = 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code)\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1]\n    initialPrefix =\n      tail && tail[1].type === 'linePrefix'\n        ? tail[2].sliceSerialize(tail[1], true).length\n        : 0\n    marker = code\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++\n      effects.consume(code)\n      return sequenceOpen\n    }\n    if (sizeOpen < 3) {\n      return nok(code)\n    }\n    effects.exit('codeFencedFenceSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, infoBefore, 'whitespace')(code)\n      : infoBefore(code)\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFencedFence')\n      return self.interrupt\n        ? ok(code)\n        : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return infoBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, metaBefore, 'whitespace')(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return info\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code)\n    }\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return infoBefore(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return meta\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code)\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return contentStart\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code)\n      ? factorySpace(\n          effects,\n          beforeContentChunk,\n          'linePrefix',\n          initialPrefix + 1\n        )(code)\n      : beforeContentChunk(code)\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return contentChunk(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return beforeContentChunk(code)\n    }\n    effects.consume(code)\n    return contentChunk\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0\n    return startBefore\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter('codeFencedFence')\n      return markdownSpace(code)\n        ? factorySpace(\n            effects,\n            beforeSequenceClose,\n            'linePrefix',\n            self.parser.constructs.disable.null.includes('codeIndented')\n              ? undefined\n              : 4\n          )(code)\n        : beforeSequenceClose(code)\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter('codeFencedFenceSequence')\n        return sequenceClose(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++\n        effects.consume(code)\n        return sequenceClose\n      }\n      if (size >= sizeOpen) {\n        effects.exit('codeFencedFenceSequence')\n        return markdownSpace(code)\n          ? factorySpace(effects, sequenceCloseAfter, 'whitespace')(code)\n          : sequenceCloseAfter(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n      return nok(code)\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineStart\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n  let max\n  /** @type {(code: Code) => boolean} */\n  let test\n  return start\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit('characterReferenceValue')\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {asciiPunctuation} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return inside\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n}\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n}\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  while (++index < events.length) {\n    const token = events[index][1]\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n  return events\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n  let token\n  /** @type {number | undefined} */\n  let open\n  /** @type {number | undefined} */\n  let close\n  /** @type {Array<Event>} */\n  let media\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1]\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ]\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3))\n\n  // Text open.\n  media = push(media, [['enter', text, context]])\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  )\n\n  // Text close, marker close, label close.\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ])\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1))\n\n  // Media close.\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n  let labelStart\n  /** @type {boolean} */\n  let defined\n\n  // Find an opening.\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n  return start\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code)\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code)\n    }\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return after\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        labelEndOk,\n        defined ? labelEndOk : labelEndNok\n      )(code)\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(\n        referenceFullConstruct,\n        labelEndOk,\n        defined ? referenceNotFull : labelEndNok\n      )(code)\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code)\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(\n      referenceCollapsedConstruct,\n      labelEndOk,\n      labelEndNok\n    )(code)\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code)\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return resourceBefore\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceOpen)(code)\n      : resourceOpen(code)\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code)\n    }\n    return factoryDestination(\n      effects,\n      resourceDestinationAfter,\n      resourceDestinationMissing,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceBetween)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code)\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        resourceTitleAfter,\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n    return resourceEnd(code)\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceEnd)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this\n  return referenceFull\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      referenceFullAfter,\n      referenceFullMissing,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return referenceCollapsedOpen\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n  let open\n  /** @type {Token} */\n  let group\n  /** @type {Token} */\n  let text\n  /** @type {Token} */\n  let openingSequence\n  /** @type {Token} */\n  let closingSequence\n  /** @type {number} */\n  let use\n  /** @type {Array<Event>} */\n  let nextEvents\n  /** @type {number} */\n  let offset\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open &&\n          // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          }\n\n          // Number of markers to use from the sequence.\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = []\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ])\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          )\n\n          // Closing.\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ])\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code\n    effects.enter('attentionSequence')\n    return inside(code)\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    const token = effects.exit('attentionSequence')\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code)\n\n    // Always populated by defaults.\n\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1\n      return schemeInsideOrEmailAtext(code)\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      size = 0\n      return urlInside\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n    size = 0\n    return emailAtext(code)\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return urlInside\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      return emailAtSignOrDot\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n    return nok(code)\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n    return emailValue(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel\n      effects.consume(code)\n      return next\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code> | undefined} */\n  let marker\n  /** @type {number} */\n  let index\n  /** @type {State} */\n  let returnState\n  return start\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      index = 0\n      return cdataOpenInside\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n    return nok(code)\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return nok(code)\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return comment\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return comment(code)\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62\n      ? end(code)\n      : code === 45\n      ? commentClose(code)\n      : comment(code)\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === value.length ? cdata : cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return cdata\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return declaration\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return instruction\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return tagCloseBetween(code)\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n    return tagOpenBetween(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      marker = undefined\n      return tagOpenAttributeValueQuotedAfter\n    }\n    if (code === null) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n    return nok(code)\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineEndingAfter\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code)\n      ? factorySpace(\n          effects,\n          lineEndingAfterPrefix,\n          'linePrefix',\n          self.parser.constructs.disable.null.includes('codeIndented')\n            ? undefined\n            : 4\n        )(code)\n      : lineEndingAfterPrefix(code)\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n  let index\n  /** @type {number | undefined} */\n  let enter\n\n  // If we start and end with an EOL or a space.\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1\n  tailExitIndex++\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n      enter = undefined\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n  let size\n  /** @type {Token} */\n  let token\n  return start\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n    effects.exit('codeTextSequence')\n    return between(code)\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return between\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return sequenceClose(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return between\n    }\n\n    // Data.\n    effects.enter('codeTextData')\n    return data(code)\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return between(code)\n    }\n    effects.consume(code)\n    return data\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return sequenceClose\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    }\n\n    // More or less accents: mark as data.\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n}\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Create} Create\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n */\n\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n * @returns {ParseContext}\n */\nexport function parse(options) {\n  const settings = options || {}\n  const constructs =\n    /** @type {FullNormalizedExtension} */\n    combineExtensions([defaultConstructs, ...(settings.extensions || [])])\n\n  /** @type {ParseContext} */\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n\n  /**\n   * @param {InitialConstruct} initial\n   */\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {boolean | null | undefined} [end=false]\n * @returns {Array<Chunk>}\n */\n\nconst search = /[\\0\\t\\n\\r]/g\n\n/**\n * @returns {Preprocessor}\n */\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean | undefined} */\n  let start = true\n  /** @type {boolean | undefined} */\n  let atCarriageReturn\n  return preprocessor\n\n  /** @type {Preprocessor} */\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray | null} */\n    let match\n    /** @type {number} */\n    let next\n    /** @type {number} */\n    let startPosition\n    /** @type {number} */\n    let endPosition\n    /** @type {Code} */\n    let code\n\n    // @ts-expect-error `Buffer` does allow an encoding.\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n      start = undefined\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n            while (column++ < next) chunks.push(-1)\n            break\n          }\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n      startPosition = endPosition + 1\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCharCode(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n  if (\n    // C0 except for HT, LF, FF, CR, space.\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) ||\n    // Control character (DEL) of C0, and C1 controls.\n    (code > 126 && code < 160) ||\n    // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) ||\n    // Noncharacters.\n    (code > 64975 && code < 65008) /* eslint-disable no-bitwise */ ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 /* eslint-enable no-bitwise */ ||\n    // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0)\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').StaticPhrasingContent} StaticPhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Root | Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n *\n * @typedef {Omit<UnistParent, 'type' | 'children'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | undefined | null | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Node | Fragment>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {<Key extends keyof CompileData>(key: Key) => CompileData[Key]} getData\n *   Get data from the key/value store.\n * @property {<Key extends keyof CompileData>(key: Key, value?: CompileData[Key]) => void} setData\n *   Set data into the key/value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<Kind extends Node>(this: CompileContext, node: Kind, token: Token, onError?: OnEnterError) => Kind} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\n// To do: micromark: create a registry of tokens?\n// To do: next major: don’t return given `Node` from `enter`.\n// To do: next major: remove setter/getter.\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * @param value\n *   Markdown to parse.\n * @param encoding\n *   Character encoding for when `value` is `Buffer`.\n * @param options\n *   Configuration.\n * @returns\n *   mdast tree.\n */\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options | null | undefined) => Root) &\n   *   ((value: Value, options?: Options | null | undefined) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding | Options | null | undefined} [encoding]\n   * @param {Options | null | undefined} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          }\n          // @ts-expect-error: `listItem` is most definitely defined, TS...\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Set data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @param {CompileData[Key]} [value]\n   *   New value.\n   * @returns {void}\n   *   Nothing.\n   */\n  function setData(key, value) {\n    data[key] = value\n  }\n\n  /**\n   * Get data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @returns {CompileData[Key]}\n   *   Value.\n   */\n  function getData(key) {\n    return data[key]\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Node} create\n   *   Create a node.\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {void}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @template {Node} Kind\n   *   Node type.\n   * @this {CompileContext}\n   *   Context.\n   * @param {Kind} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {Kind}\n   *   The given node.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    // @ts-expect-error: `end` will be patched later.\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {Node}\n   *   The closed node.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n    return node\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    let tail = node.children[node.children.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      // @ts-expect-error: we’ll add `end` later.\n      tail.position = {\n        start: point(token.start)\n      }\n      // @ts-expect-error: Assume `parent` accepts `text`.\n      node.children.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    setData('inReference', true)\n    if (node.type === 'link') {\n      /** @type {Array<StaticPhrasingContent>} */\n      // @ts-expect-error: Assume static phrasing content.\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {HTML} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Extension | Array<Extension>>} extensions\n * @returns {void}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {void}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      if (key === 'canContainEols') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'transforms') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'enter' || key === 'exit') {\n        const right = extension[key]\n        if (right) {\n          Object.assign(combined[key], right)\n        }\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * @this {import('unified').Processor}\n * @type {import('unified').Plugin<[Options?] | void[], string, Root>}\n */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n  if (!protocol) {\n    return value\n  }\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n  return ''\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n    let replace = ''\n\n    // A correct percent encoded value.\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    }\n    // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1)\n\n      // A correct surrogate pair.\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      }\n      // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, undefined, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number | undefined} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = node && typeof node === 'object' ? node : {}\n\n        if (typeof value.type === 'string') {\n          const name =\n            // `hast`\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : // `xast`\n              typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike | Node | null | undefined} [node]\n *   Node.\n * @returns {Position}\n *   Position.\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start' | 'end'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {NodeLike | Node | null | undefined} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    // To do: next major: don’t return points when invalid.\n    return {\n      // @ts-expect-error: in practice, null is allowed.\n      line: point.line || null,\n      // @ts-expect-error: in practice, null is allowed.\n      column: point.column || null,\n      // @ts-expect-error: in practice, null is allowed.\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Definition} Definition\n */\n\n/**\n * @typedef {Root | Content} Node\n *\n * @callback GetDefinition\n *   Get a definition by identifier.\n * @param {string | null | undefined} [identifier]\n *   Identifier of definition.\n * @returns {Definition | null}\n *   Definition corresponding to `identifier` or `null`.\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `tree`.\n *\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} tree\n *   Tree to check.\n * @returns {GetDefinition}\n *   Getter.\n */\nexport function definitions(tree) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!tree || !tree.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(tree, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /** @type {GetDefinition} */\n  function definition(identifier) {\n    const id = clean(identifier)\n    // To do: next major: return `undefined` when not found.\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string | null | undefined} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('hast').Element} Element\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    state.footnoteOrder.push(id)\n    state.footnoteCounts[id] = 1\n    counter = state.footnoteOrder.length\n  } else {\n    state.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = state.footnoteCounts[id]\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + state.clobberPrefix + 'fn-' + safeId,\n      id:\n        state.clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Reference} Reference\n * @typedef {import('mdast').Root} Root\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Reference>} References\n */\n\n// To do: next major: always return array.\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {References} node\n *   Reference node (image, link).\n * @returns {ElementContent | Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return {type: 'text', value: '![' + node.alt + suffix}\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang ? node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/) : null\n  /** @type {Properties} */\n  const properties = {}\n\n  if (lang) {\n    properties.className = ['language-' + lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../state.js').State} State\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n// To do: when both:\n// * <https://github.com/micromark/micromark-extension-footnote>\n// * <https://github.com/syntax-tree/mdast-util-footnote>\n// …are archived, remove this (also from mdast).\n// These inline notes are not used in GFM.\n\n/**\n * Turn an mdast `footnote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Footnote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnote(state, node) {\n  const footnoteById = state.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(state, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').HTML} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Raw | Element | null}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.dangerous) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastRoot | HastElement}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start.line && end.line) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(node, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastText | HastElement}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} MdastRoot\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n * @typedef {Extract<MdastNodes, MdastParent>} MdastParents\n *\n * @typedef EmbeddedHastFields\n *   hast fields.\n * @property {string | null | undefined} [hName]\n *   Generate a specific element with this tag name instead.\n * @property {HastProperties | null | undefined} [hProperties]\n *   Generate an element with these properties instead.\n * @property {Array<HastElementContent> | null | undefined} [hChildren]\n *   Generate an element with this content instead.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} MdastData\n *   mdast data with embedded hast fields.\n *\n * @typedef {MdastNodes & {data?: MdastData | null | undefined}} MdastNodeWithData\n *   mdast node with embedded hast data.\n *\n * @typedef PointLike\n *   Point-like value.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @typedef PositionLike\n *   Position-like value.\n * @property {PointLike | null | undefined} [start]\n *   Point-like value.\n * @property {PointLike | null | undefined} [end]\n *   Point-like value.\n *\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | null | undefined} parent\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n *   Signature of `state` for when props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {HastProperties} props\n *   Properties.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n *   Signature of `state` for when no props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @typedef HFields\n *   Info on `state`.\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {HastProperties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use from backreferences back to their footnote call.\n * @property {(identifier: string) => MdastDefinition | null} definition\n *   Definition cache.\n * @property {Record<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Record<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(from: MdastNodes, node: HastNodes) => void} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => Type | HastElement} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {(node: MdastNodes, parent: MdastParents | null | undefined) => HastElementContent | Array<HastElementContent> | null | undefined} one\n *   Transform an mdast node to hast.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastContent>(nodes: Array<Type>, loose?: boolean | null | undefined) => Array<Type | HastText>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n * @property {(left: MdastNodeWithData | PositionLike | null | undefined, right: HastElementContent) => HastElementContent} augment\n *   Like `state` but lower-level and usable on non-elements.\n *   Deprecated: use `patch` and `applyData`.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree.\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute on footnotes to prevent it from\n *   *clobbering*.\n * @property {string | null | undefined} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call (affects\n *   screen readers).\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section (affects screen readers).\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (note that `id: 'footnote-label'`\n *   is always added as footnote calls use it with `aria-describedby` to\n *   provide an accessible label).\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   Tag name to use for the footnote label.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes.\n * @property {Array<string> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Handle nodes.\n *\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} State\n *   Info passed around.\n */\n\nimport {visit} from 'unist-util-visit'\nimport {position, pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, MdastFootnoteDefinition>} */\n  const footnoteById = {}\n\n  // To do: next major: add `options` to state, remove:\n  // `dangerous`, `clobberPrefix`, `footnoteLabel`, `footnoteLabelTagName`,\n  // `footnoteLabelProperties`, `footnoteBackLabel`, `passThrough`,\n  // `unknownHandler`.\n\n  // To do: next major: move to `state.options.allowDangerousHtml`.\n  state.dangerous = dangerous\n  // To do: next major: move to `state.options`.\n  state.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  // To do: next major: move to `state.options`.\n  state.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  // To do: next major: move to `state.options`.\n  state.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  // To do: next major: move to `state.options`.\n  state.unknownHandler = settings.unknownHandler\n  // To do: next major: move to `state.options`.\n  state.passThrough = settings.passThrough\n\n  state.handlers = {...handlers, ...settings.handlers}\n\n  // To do: next major: replace utility with `definitionById` object, so we\n  // only walk once (as we need footnotes too).\n  state.definition = definitions(tree)\n  state.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  state.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  state.footnoteCounts = {}\n\n  state.patch = patch\n  state.applyData = applyData\n  state.one = oneBound\n  state.all = allBound\n  state.wrap = wrap\n  // To do: next major: remove `augment`.\n  state.augment = augment\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return state\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {MdastNodeWithData | PositionLike | null | undefined} left\n   * @param {HastElementContent} right\n   * @returns {HastElementContent}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {MdastData} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function state(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | null | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n   *   Resulting hast node.\n   */\n  function oneBound(node, parent) {\n    // @ts-expect-error: that’s a state :)\n    return one(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function allBound(parent) {\n    // @ts-expect-error: that’s a state :)\n    return all(state, parent)\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {Type | HastElement}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {Type | HastElement} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent is likely to keep the content around (otherwise: pass\n      // `hChildren`).\n      else {\n        result = {\n          type: 'element',\n          tagName: hName,\n          properties: {},\n          children: []\n        }\n\n        // To do: next major: take the children from the `root`, or inject the\n        // raw/text/comment or so into the element?\n        // if ('children' in node) {\n        //   // @ts-expect-error: assume `children` are allowed in elements.\n        //   result.children = node.children\n        // } else {\n        //   // @ts-expect-error: assume `node` is allowed in elements.\n        //   result.children.push(node)\n        // }\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      result.properties = {...result.properties, ...hProperties}\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      // @ts-expect-error: assume valid children are defined.\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an mdast node into a hast node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   mdast node.\n * @param {MdastParents | null | undefined} [parent]\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   Resulting hast node.\n */\n// To do: next major: do not expose, keep bound.\nexport function one(state, node, parent) {\n  const type = node && node.type\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(state.handlers, type)) {\n    return state.handlers[type](state, node, parent)\n  }\n\n  if (state.passThrough && state.passThrough.includes(type)) {\n    // To do: next major: deep clone.\n    // @ts-expect-error: types of passed through nodes are expected to be added manually.\n    return 'children' in node ? {...node, children: all(state, node)} : node\n  }\n\n  if (state.unknownHandler) {\n    return state.unknownHandler(state, node, parent)\n  }\n\n  return defaultUnknownHandler(state, node)\n}\n\n/**\n * Transform the children of an mdast node into hast nodes.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} parent\n *   mdast node to compile\n * @returns {Array<HastElementContent>}\n *   Resulting hast nodes.\n */\n// To do: next major: do not expose, keep bound.\nexport function all(state, parent) {\n  /** @type {Array<HastElementContent>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n    while (++index < nodes.length) {\n      const result = one(state, nodes[index], parent)\n\n      // To do: see if we van clean this? Can we merge texts?\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastText | HastElement}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastText | HastElement} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: all(state, node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | null | undefined} [loose=false]\n *   Whether to add line endings at start and end.\n * @returns {Array<Type | HastText>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Type | HastText>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n","/**\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {PositionLike | null | undefined} [position]\n */\n\n/**\n * Check if `node` is generated.\n *\n * @param {NodeLike | null | undefined} [node]\n *   Node to check.\n * @returns {boolean}\n *   Whether `node` is generated (does not have positional info).\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Root} HastRoot\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Root} MdastRoot\n *\n * @typedef {import('./state.js').Options} Options\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n */\n\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {HastNodes | null | undefined}\n *   hast tree.\n */\n// To do: next major: always return a single `root`.\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, null)\n  const foot = footer(state)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  // To do: next major: always return root?\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\nexport function footer(state) {\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let index = -1\n\n  while (++index < state.footnoteOrder.length) {\n    const def = state.footnoteById[state.footnoteOrder[index]]\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= state.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            state.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: state.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: state.clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: state.footnoteLabelTagName,\n        properties: {\n          // To do: use structured clone.\n          ...JSON.parse(JSON.stringify(state.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: state.footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  const value =\n    // @ts-expect-error looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-expect-error looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","import StyleToObject from './index.js';\n\nexport default StyleToObject;\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template {import('react').ElementType} T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types.js').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'td'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: false}} TableDataCellProps\n * @typedef {ComponentPropsWithoutRef<'th'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: true}} TableHeaderCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableDataCellProps>} TableDataCellComponent\n * @typedef {ComponentType<TableHeaderCellProps>} TableHeaderCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableDataCellComponent|ReactMarkdownNames} td\n * @property {TableHeaderCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types.js').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\nimport {uriTransformer} from './uri-transformer.js'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const transform =\n    options.transformLinkUri === undefined\n      ? uriTransformer\n      : options.transformLinkUri\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = index\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && transform) {\n    properties.href = transform(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map(String)\n    .join('')\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'remarkPlugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n"],"names":["_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","_extends","assign","arguments","prototype","hasOwnProperty","call","apply","this","_excluded$4","_createContext","createContext","strict","name","ButtonGroupProvider","useButtonGroup","ButtonGroup","forwardRef","props","ref","size","colorScheme","variant","className","_props$spacing","spacing","isAttached","isDisabled","rest","_className","cx","context","React","groupStyles","display","borderEndRadius","borderRadius","borderStartRadius","marginStart","value","chakra","role","__css","__DEV__","displayName","_excluded$3","ButtonSpinner","label","placement","_props$children","children","Spinner","color","width","height","marginProp","spinnerStyles","_extends2","alignItems","position","fontSize","lineHeight","_excluded$2","ButtonIcon","_children","focusable","alignSelf","flexShrink","_excluded$1","Button","group","styles","useStyleConfig","_omitThemingProps","omitThemingProps","_omitThemingProps$isD","isLoading","isActive","isFullWidth","leftIcon","rightIcon","loadingText","_omitThemingProps$ico","iconSpacing","type","spinner","_omitThemingProps$spi","spinnerPlacement","as","buttonStyles","_styles$_focus","_focus","mergeWith","zIndex","appearance","justifyContent","userSelect","whiteSpace","verticalAlign","outline","_useButtonType","_React$useState","isButton","setIsButton","node","tagName","undefined","useButtonType","_ref","defaultType","contentProps","disabled","useMergeRefs","dataAttr","opacity","ButtonContent","marginEnd","_excluded","IconButton","icon","isRound","ariaLabel","element","padding","hasOwn","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","isPlainObject","obj","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","options","enumerable","configurable","newValue","writable","getProperty","module","exports","extend","src","copy","copyIsArray","clone","deep","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","str","replace","style","TypeError","lineno","column","updatePosition","lines","match","lastIndexOf","start","line","Position","whitespace","end","content","errorsList","error","msg","err","Error","reason","filename","silent","push","re","m","exec","slice","comments","rules","c","comment","pos","charAt","declaration","prop","val","ret","property","decl","decls","declarations","isBuffer","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","location","propFullName","secret","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","elementType","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","u","b","Symbol","for","d","e","f","g","h","k","l","n","p","q","t","v","a","r","$$typeof","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","SuspenseList","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isSuspenseList","isValidElementType","getModuleId","typeOf","parse","StyleToObject","iterator","output","hasIterator","len","_iterableToArray","from","_objectWithoutProperties","o","getOwnPropertySymbols","s","includes","propertyIsEnumerable","_setPrototypeOf","setPrototypeOf","bind","__proto__","_toConsumableArray","arrayLikeToArray","iterableToArray","unsupportedIterableToArray","_classCallCheck","_defineProperties","toPropertyKey","_createClass","_inherits","create","_getPrototypeOf","getPrototypeOf","_isNativeReflectConstruct","Boolean","valueOf","Reflect","construct","_assertThisInitialized","ReferenceError","_possibleConstructorReturn","_createSuper","_construct","_wrapNativeSuper","Map","Function","has","get","set","Wrapper","stringifyPosition","point","index","VFileMessage","place","origin","parts","message","stack","fatal","ruleId","file","actual","expected","url","note","path","basename","ext","assertPath","seenNonSlash","charCodeAt","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","code","join","joined","segments","normalize","sep","absolute","allowAboveRoot","lastSlashIndex","result","lastSegmentLength","lastSlash","dots","normalizeString","JSON","stringify","proc","cwd","isUrl","fileUrlOrPath","href","urlToPath","URL","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","bufferLike","buffer","data","messages","history","stored","map","assertNonEmpty","assertPart","stem","encoding","part","_toArray","arrayWithHoles","nonIterableRest","bail","toStringTag","wrap","middleware","callback","called","parameters","fnExpectsCallback","done","exception","then","unified","base","frozen","transformers","fns","pipeline","run","values","middlewareIndex","pop","next","fn","use","middelware","trough","attachers","namespace","freezeIndex","processor","assertUnfrozen","own","Parser","Compiler","freeze","attacher","transformer","Number","POSITIVE_INFINITY","settings","addPlugin","addList","addPreset","add","plugin","plugins","entry","isPlainObj","doc","vfile","assertParser","newable","String","assertCompiler","assertNode","compile","Promise","executor","resolve","reject","tree","runSync","complete","assertDone","process","processSync","destination","asyncName","looksLikeAVFile","emptyOptions","one","includeImageAlt","includeHtml","alt","all","splice","list","remove","items","chunkStart","unshift","syntaxExtension","extension","hook","left","right","constructs","existing","before","asciiAlpha","regexCheck","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodePunctuation","unicodeWhitespace","regex","test","fromCharCode","factorySpace","effects","ok","max","limit","enter","prefix","consume","exit","tokenize","previous","contentStart","attempt","parser","contentInitial","lineStart","token","contentType","document","childFlow","childToken","lineStartOffset","self","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","nok","disable","null","blankLine","after","partial","subtokenize","event","lineIndex","otherIndex","otherEvent","subevents","more","jumps","_isInFirstContentOfListItem","subcontent","_container","eventIndex","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","_gfmTasklistFirstContentOfListItem","chunkInside","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","text","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","bufferIndex","tabs","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","info","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","state","view","startIndex","startBufferIndex","endIndex","endBufferIndex","head","shift","sliceChunks","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","thematicBreak","marker","sequence","initialSize","kind","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","open","contBefore","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","raw","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","begin","escape","factoryWhitespace","normalizeIdentifier","toLowerCase","toUpperCase","definition","identifier","labelAfter","markerAfter","destinationBefore","destinationAfter","titleBefore","afterWhitespace","defined","beforeMarker","titleAfter","titleAfterOptionalWhitespace","codeIndented","afterPrefix","furtherStart","headingAtx","sequenceOpen","sequenceFurther","setextUnderline","paragraph","heading","htmlBlockNames","htmlRawNames","htmlFlow","closingTag","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","commentOpenInside","cdataOpenInside","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationStart","blankLineBefore","continuationAfter","nonLazyContinuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","nonLazyContinuation","codeFenced","closeStart","startBefore","beforeSequenceClose","sequenceClose","sizeOpen","sequenceCloseAfter","initialPrefix","beforeSequenceOpen","infoBefore","atNonLazyBreak","metaBefore","meta","contentBefore","beforeContentChunk","contentChunk","createElement","decodeNamedCharacterReference","characterReference","innerHTML","char","textContent","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","labelEndNok","resourceConstruct","labelEndOk","referenceFullConstruct","referenceNotFull","referenceCollapsedConstruct","close","media","insideSpan","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFullAfter","referenceFullMissing","referenceCollapsedOpen","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","closingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","instruction","tagOpen","commentEnd","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelStartLink","hardBreakEscape","codeText","between","tailExitIndex","headEnterIndex","resolveText","extensions","combineExtensions","defaultConstructs","search","decodeNumericCharacterReference","parseInt","characterEscapeOrReference","decode","$0","$1","$2","hex","fromMarkdown","config","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","tokenStack","resume","setData","getData","listStack","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","lang","title","depth","referenceType","ancestor","decodeString","fragment","ordered","spread","checked","compiler","postprocess","atCarriageReturn","endPosition","lastIndex","Math","ceil","preprocess","combined","remarkParse","normalizeUri","skip","encodeURIComponent","convert","castFactory","typeFactory","anyFactory","propsFactory","tests","checks","visitParents","visitor","reverse","is","step","factory","parents","visit","subresult","grandparents","toResult","concat","parent","pointStart","pointEnd","clean","footnoteReference","counter","id","safeId","footnoteOrder","footnoteCounts","reuseCounter","properties","clobberPrefix","dataFootnoteRef","ariaDescribedBy","patch","sup","applyData","revert","subtype","suffix","contents","listItemLoose","trimLines","last","trimLine","codePointAt","handlers","blockquote","break","delete","footnote","footnoteById","no","dangerous","imageReference","inlineCode","linkReference","results","loose","listLoose","child","root","table","rows","firstRow","tableContent","body","tableCell","tableRow","siblings","align","cellIndex","cells","cell","alignValue","toml","ignore","yaml","footnoteDefinition","createState","allowDangerousHtml","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","unknownHandler","passThrough","cache","definitions","augment","hName","hProperties","hChildren","ctx","generated","to","defaultUnknownHandler","nodes","toHast","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","tailTail","dataFootnotes","footer","bridge","mutate","Schema","normal","space","merge","Info","attribute","boolean","booleanish","overloadedBoolean","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","types","DefinedInfo","mask","mark","transform","attributes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","async","autoCapitalize","autoComplete","autoFocus","autoPlay","blocking","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","default","defer","dir","dirName","download","draggable","encType","enterKeyHint","fetchPriority","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inert","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeToggle","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","popover","popoverTarget","popoverTargetAction","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scope","scoped","seamless","selected","shadowRootClonable","shadowRootDelegatesFocus","shadowRootMode","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","tabIndex","translate","typeMustMatch","useMap","writingSuggestions","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","transformOrigin","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cy","defaultAction","descent","diffuseConstant","direction","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","operator","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","htmlBase","svgBase","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","unwrapDisallowed","thing","valid","dash","cap","kebab","camelcase","hastToReact","protocols","uriTransformer","uri","first","colon","tableElements","Set","childrenToReact","childIndex","toReact","skipHtml","transformLinkUri","parentSchema","schema","addProperty","listDepth","component","components","basic","ReactIs","linkTarget","inline","level","transformImageUri","input","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","count","Type","dashes","find","padRight","padLeft","commas","styleReplacer","parseStyle","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","console","warn","remarkPlugins","remarkRehype","remarkRehypeOptions","rehypePlugins","hastNode","propTypes"],"sourceRoot":""}